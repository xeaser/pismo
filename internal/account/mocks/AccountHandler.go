// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// AccountHandler is an autogenerated mock type for the AccountHandler type
type AccountHandler struct {
	mock.Mock
}

// createAccount provides a mock function with given fields: w, r
func (_m *AccountHandler) createAccount(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// createTransaction provides a mock function with given fields: w, r
func (_m *AccountHandler) createTransaction(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// getAccount provides a mock function with given fields: w, r
func (_m *AccountHandler) getAccount(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// getTransactionsByFilter provides a mock function with given fields: w, r
func (_m *AccountHandler) getTransactionsByFilter(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// NewAccountHandler creates a new instance of AccountHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAccountHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *AccountHandler {
	mock := &AccountHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
